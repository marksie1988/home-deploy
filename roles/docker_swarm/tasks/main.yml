---
- name: Check if Swarm is already initialized
  command: docker info --format "{{ '{{' }}.Swarm.LocalNodeState{{ '}}' }}"
  register: swarm_status
  changed_when: false

- name: Initialize Docker Swarm
  command: docker swarm init --advertise-addr "{{ swarm_cluster_ip }}"
  register: swarm_init
  changed_when: "'Swarm initialized' in swarm_init.stdout and swarm_status.stdout == 'inactive'"
  when: inventory_hostname == groups['swarm'][0]

- name: Get Swarm Manager Token
  command: docker swarm join-token manager -q
  changed_when: false
  register: manager_token
  when: inventory_hostname == groups['swarm'][0]

- name: Get Swarm Worker Token
  command: docker swarm join-token worker -q
  changed_when: false
  register: worker_token

- name: Add Swarm Managers
  command: docker swarm join --token "{{ manager_token.stdout }}" "{{ swarm_init.stdout_lines[1] }}"
  when: inventory_hostname != groups['swarm'][0] and inventory_hostname in groups['swarm'][:number_of_managers]
  register: join_manager
  changed_when: false
  failed_when: "not join_manager.stdout"

- name: Add Swarm Workers
  command: docker swarm join --token "{{ worker_token.stdout }}" "{{ swarm_init.stdout_lines[1] }}"
  when: inventory_hostname not in groups['swarm'][:number_of_managers] and swarm_init.changed
  register: join_worker
  changed_when: false
  failed_when: "not join_worker.stdout"
